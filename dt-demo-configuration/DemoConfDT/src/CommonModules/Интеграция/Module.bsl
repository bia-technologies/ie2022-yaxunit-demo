#Область ПрограммныйИнтерфейс

// Выполнить запрос.
//  Выполняет http запрос, по переданным параметрам
// Параметры:
//  Адрес - Строка - URL ресурса
//  ФорматОтвета - см. ФорматОтвета
//  Авторизация - Неопределено - без авторизации
//              - Структура - параметры авторизации:
//                * Пользователь - Строка
//                * Пароль - Строка
// 
// Возвращаемое значение:
//  Структура - Выполнить запрос:
// * Успешно - Булево
// * Ошибки - Массив из Строка - Описание возникцишх ошибок
// * КодСостояния - Число - Код ответа
// * Тело - Строка
//        - Структура
//        - Массив из Произвольный
Функция ВыполнитьЗапрос(Адрес, ФорматОтвета = Неопределено, Авторизация = Неопределено) Экспорт
	
	Результат = Новый Структура("Успешно, Ошибки, КодСостояния, Тело", Истина, Новый Массив());
	ДанныеАдреса = РазобратьURL(Адрес);
	
	Если ДанныеАдреса.ЗащищенноеСоединение Тогда 
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL;
	Иначе
		ЗащищенноеСоединение = Неопределено;
	КонецЕсли;
	
	Если Авторизация <> Неопределено Тогда
		ДанныеАдреса.Пользователь = Авторизация.Пользователь;
		ДанныеАдреса.Пароль = Авторизация.Пароль;
	КонецЕсли;
	
	Соединение = Новый HTTPСоединение(ДанныеАдреса.ИмяСервера,
									  ДанныеАдреса.Порт,
									  ДанныеАдреса.Пользователь,
									  ДанныеАдреса.Пользователь,
									  ,
									  ,
									  ЗащищенноеСоединение);
	
	Запрос = Новый HTTPЗапрос(ДанныеАдреса.АдресСкрипта);
	
	Ответ = Соединение.ВызватьHTTPМетод("GET", Запрос);
	
	Результат = Новый Структура("Успешно, Ошибки, КодСостояния, Тело", Истина, Новый Массив());
	Результат.КодСостояния = Ответ.КодСостояния;
	Результат.Успешно =  Ответ.КодСостояния >= 200 И Ответ.КодСостояния < 300;
	Результат.Тело = Ответ.ПолучитьТелоКакСтроку();
	
	Если НЕ(Ответ.КодСостояния >= 200 И Ответ.КодСостояния < 300) Тогда
		Результат.Успешно =  Ложь;
		Результат.Ошибки.Добавить("Не удалось выполнить запрос");
	КонецЕсли;
	
	Если ФорматОтвета = ФорматОтвета().ОбъектJSON Тогда
		Попытка
			Результат.Тело = ЗначениеИзСтрокиJSON(Результат.Тело);
		Исключение
			Результат.Ошибки.Добавить("Не удалось разобрать тело");
			Результат.Ошибки.Добавить(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			Результат.Успешно = Ложь;
		КонецПопытки;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ФорматОтвета() Экспорт
	
	Форматы = Новый Структура();
	Форматы.Вставить("Текст", "Текст");
	Форматы.Вставить("ОбъектJSON", "JSON");
	
	Возврат Новый ФиксированнаяСтруктура(Форматы);
	
КонецФункции

Функция Методы() Экспорт
	
	Методы = Новый Структура();
	Методы.Вставить("GET", "GET");
	Методы.Вставить("POST", "POST");
	
	Возврат Новый ФиксированнаяСтруктура(Методы);
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Разобрать URL.
// 
// Параметры:
//  URL - Строка
// 
// Возвращаемое значение:
//  Структура - Разобрать URL:
// * URL - Строка - Переданный адрес
// * ЗащищенноеСоединение - Булево
// * Протокол - Строка
// * ИмяСервера - Строка
// * АдресСкрипта - Строка 
// * Параметры - Строка
// * Якорь - Строка
// * Пользователь - Строка
// * Пароль - Строка
// * Порт - Число
// * Авторизация  - Строка
Функция РазобратьURL(Знач URL) Экспорт
	
	Протокол	= "http";
	URL			= СокрЛП(URL);
	Позиция		= СтрНайти(URL, "://");
	
	Если Позиция Тогда
		
		Протокол	= НРег(Лев(URL, Позиция - 1));
		URL			= Сред(URL, Позиция + 3);
		
	КонецЕсли;
	
	Свойства	= "URL, ЗащищенноеСоединение, Протокол, ИмяСервера, АдресСкрипта, Параметры, Якорь, Пользователь, Пароль, Порт, Авторизация";
	Результат	= Новый Структура(Свойства, URL, Протокол = "https", Протокол);
	
	ИменаСвойств =	"URL, /, URL, АдресСкрипта
					|АдресСкрипта, #, АдресСкрипта, Якорь
					|АдресСкрипта, ?, АдресСкрипта, Параметры
					|URL, @, Авторизация, ИмяСервера
					|Авторизация, :, Пользователь, Пароль
					|ИмяСервера, :, ИмяСервера, Порт";
	
	Для Каждого СтрокаСвойств Из СтрРазделить(ИменаСвойств, Символы.ПС) Цикл
		
		МассивСвойств = СтрРазделить(СтрокаСвойств, ", ", Ложь);
		ЗаполнитьПоляЗапроса(Результат, МассивСвойств[0], МассивСвойств[1], МассивСвойств[2], МассивСвойств[3]);
		
	КонецЦикла;
	
	Результат.Порт = ?(ПустаяСтрока(Результат.Порт), 80, Число(Результат.Порт));
		
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоляЗапроса(Результат, СтрокаПоиска, Разделитель, СвойствоЗначенияЛевого, СвойствоЗначенияПравого)
	
	СтрокаПоиска	= Результат[СтрокаПоиска];
	Позиция			= СтрНайти(СтрокаПоиска, Разделитель);
	
	Если Позиция Тогда
		
		ЗначениеЛевое	= Лев(СтрокаПоиска,		Позиция - 1);
		ЗначениеПравое	= Сред(СтрокаПоиска,	Позиция + 1);
		
		Результат.Вставить(СвойствоЗначенияЛевого,	ЗначениеЛевое);
		Результат.Вставить(СвойствоЗначенияПравого,	ЗначениеПравое);
		
	ИначеЕсли Разделитель = "@" Тогда
		
		Результат.Вставить("ИмяСервера", СтрокаПоиска);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЗначениеИзСтрокиJSON(Строка)
	
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(Строка);
	Значение = ПрочитатьJSON(Чтение);
	Чтение.Закрыть();
	
	Возврат Значение;
	
КонецФункции

#КонецОбласти